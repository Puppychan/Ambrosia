
//                                    ZStack {
//                                        Rectangle()
//                                            .foregroundColor(Color("CardBackgroundColor"))
//                                            .modifier(LightShadowModifier())
//
//                                        FavoriteContent(imageSize: imageSize, titleSize: titleSize, starSize: starSize, distanceSize: distanceSize, openSize: openSize, contentWidth: contentWidth, rest: rest)
//                                            .frame(height: imageSize)
//
//                                    }
//
//                                        .frame(height: imageSize + imageSize / 2.5, alignment: .center)
//                                        .cornerRadius(10)



        HStack {
            // MARK: image
            FavoriteImage(cardWidth: imageSize, cardHeight: imageSize)
                .frame(width: imageSize)
                .cornerRadius(10)
            
            VStack(alignment: .leading, spacing: 3) {
                // MARK: ratding
                FavoriteRating(restaurant: rest, starSize: starSize, titleSize: titleSize)

                // MARK: name
                Text(rest.title)
                    .lineLimit(1)
                    .multilineTextAlignment(.leading)
                    .foregroundColor(Color("TextColor"))
//                    .font(.system(size: titleSize))
                    .font(.title3)

                // MARK: side info
                FavoriteSideInfo(distanceSize: distanceSize, restaurant: rest)

                Spacer()

                // MARK: Open State
                FavoriteOpen(isOpen: true, openSize: openSize)

            }
//                .frame(width: contentWidth)
            
            Spacer()
            
            VStack {
                FavoriteButton(rest: rest)
                Spacer()
            }

        }
        .padding(30)



//
//  FavoriteOpen.swift
//  Ambrosia
//
//  Created by Nhung Tran on 16/09/2022.
//

import SwiftUI

struct FavoriteOpen: View {
    var isOpen: Bool
    var body: some View {
        Label {
            Text(isOpen ? "OPEN" : "CLOSED")
        } icon: {
            Image(systemName: "circle.fill")
        }
        .foregroundColor(Color("\(isOpen ? "Open" : "Close")Color"))
        .font(.headline)

    }
}
